
# Arttifai Tech - Data Science Project: Weather Data Analyzer

## AIM:
To develop a Weather Data Analyzer that processes historical weather data, identifies patterns, and provides graphical insights through visualizations. It helps users understand temperature variations, humidity levels, and rainfall patterns, while incorporating predictive modeling (Linear Regression) to forecast future temperature trends.

---

## KEY FOCUS AREAS:

- **Data Collection & Cleaning**: Gather structured weather datasets, handle missing values, and normalize data.
- **Exploratory Data Analysis (EDA)**: Perform statistics, relationships, and climate insights.
- **Graphical Representation**: Use Matplotlib & Seaborn for line charts, bar graphs, scatter plots, and trend predictions.
- **Predictive Analysis**: Use Linear Regression to predict temperature trends.
- **User Interaction**: Display results in an easy-to-understand visual format.

---

## OBJECTIVES:

### Data Processing & Preprocessing:
- âœ“ Import & clean real-world CSV datasets with date, temperature, humidity, rainfall.
- âœ“ Handle missing values using mean/mode imputation.
- âœ“ Normalize values to improve ML prediction accuracy.
- âœ“ Convert and extract features like year, month, season for time-series analysis.

### Exploratory Data Analysis (EDA):
- âœ“ Identify climate trends across years.
- âœ“ Perform statistical analysis (mean, median, standard deviation).
- âœ“ Correlation analysis using scatter plots and heatmaps.

### Visualization Objectives:
- âœ“ Line Chart: Show temperature trends over time.
- âœ“ Bar Graph: Compare yearly rainfall.
- âœ“ Scatter Plot: Visualize temperature vs humidity.
- âœ“ Trend Line: Forecast temperature using Linear Regression.

### Predictive Modelling Objectives:
- âœ“ Train Linear Regression model for future predictions.
- âœ“ Evaluate using MSE and RMSE.
- âœ“ Display forecast using trend line graphs.

---

## EXPECTED OUTPUT:
Upon executing the Python script (VS Code, PyCharm, Jupyter Notebook), it will generate:

- ðŸ“ˆ **Line Chart**: Temperature trend over the years.
- ðŸ“Š **Bar Graph**: Yearly rainfall comparison.
- ðŸ”˜ **Scatter Plot**: Temperature vs humidity.
- ðŸ”® **Prediction Graph**: Forecast future temperature using Linear Regression.
- ðŸ“‹ **Statistical Summary**: Console output of key climate stats.

---

## SAMPLE VISUAL OUTPUT:
- Line graph showing temperature variation.
- Bar graph of rainfall over years.
- Scatter plot showing temp-humidity correlation.
- Trendline prediction for future temperatures.

---

## TOOLS & LIBRARIES:
- Python (Pandas, NumPy, Matplotlib, Seaborn, Scikit-Learn)
- Dataset (CSV format with date, temp, humidity, rainfall)

---

## HOW TO RUN:
1. Install libraries: `pip install pandas numpy matplotlib seaborn scikit-learn`
2. Prepare your dataset in CSV format.
3. Run the script in your IDE.
